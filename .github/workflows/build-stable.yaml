# This workflow will Docker Build the app and push to GitHub's Container Repository

name: Beta Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Build_and_Push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Login to GHCR
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCLOUD_AUTH }}
        export_default_credentials: true  # Set to true to authenticate the Cloud Run action

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
          push: true
          tags: |
            ghcr.io/hyperclaw79/pokegambler
            gcr.io/pokegambler/pokegambler
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  GCR_Deploy:
    runs-on: ubuntu-latest
    needs: [Build_and_Push]
    steps:    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCLOUD_AUTH }}
        export_default_credentials: true  # Set to true to authenticate the Cloud Run action
    - name: Deploy to Cloud Run
      id: gcr_deploy
      uses: google-github-actions/deploy-cloudrun@main
      with:
        service: pokegambler
        image: gcr.io/pokegambler/pokegambler
        env_vars: |
          TOKEN=${{ secrets.TOKEN }},DISCORD_WEBHOOK_CHANNEL=${{ secrets.DISCORD_WEBHOOK_CHANNEL }},DISCORD_WEBHOOK_TOKEN=${{ secrets.DISCORD_WEBHOOK_TOKEN }},ANNOUNCEMENT_CHANNEL=${{ secrets.ANNOUNCEMENT_CHANNEL }},MONGO_CLUSTER_STRING=${{ secrets.MONGO_CLUSTER_STRING }},OWNER_ID=${{ secrets.OWNER_ID }},DEFAULT_CHANNELMODE=${{ secrets.DEFAULT_CHANNELMODE }},WHITELIST_GUILDS=${{ secrets.WHITELIST_GUILDS }},DEFAULT_GUILDMODE=${{ secrets.DEFAULT_GUILDMODE }},IMG_UPLOAD_CHANNEL=${{ secrets.IMG_UPLOAD_CHANNEL }},ADMIN_CMD_LOG_CHANNEL=${{ secrets.ADMIN_CMD_LOG_CHANNEL }},OFFICIAL_SERVER=${{ secrets.OFFICIAL_SERVER }}
    - name: Show Output
      run: echo ${{ steps.gcr_deploy.outputs.url }}