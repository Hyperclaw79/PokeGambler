# This workflow will Docker Build the app and push to GitHub and Google Cloud's Container Repositories.
# Then it will push the latest build to Google Kubernates Engine.

name: Beta Build

on:
  push:
    branches: [ experimental ]
  workflow_dispatch:

env:
  TAG: beta
  BRANCH: experimental

jobs:
  Build_and_Push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ env.BRANCH }}

    - name: Login to GHCR
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCLOUD_AUTH }}

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
          push: true
          tags: |
            ghcr.io/hyperclaw79/pokegambler:${{ env.TAG }}
            gcr.io/pokegambler/pokegambler:${{ env.TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  GKE_Deploy:
    runs-on: ubuntu-latest
    needs: [Build_and_Push]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ env.BRANCH }}

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCLOUD_AUTH }}

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Get GKE Credentials
      uses: google-github-actions/get-gke-credentials@main
      with:
        cluster_name: pokegambler-cluster
        location: us-central1
        credentials: ${{ secrets.GCLOUD_AUTH }}

    - name: Set up Kustomize
      run: |-
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        chmod u+x ./kustomize

    - name: Deploy to GKE
      run: |-
        kubectl delete secret pokegambler-config
        kubectl create secret generic pokegambler-config \
          --from-literal=TOKEN=${{ secrets.TOKEN }} \
          --from-literal=DISCORD_WEBHOOK_CHANNEL=${{ secrets.DISCORD_WEBHOOK_CHANNEL }} \
          --from-literal=DISCORD_WEBHOOK_TOKEN=${{ secrets.DISCORD_WEBHOOK_TOKEN }} \
          --from-literal=ANNOUNCEMENT_CHANNEL=${{ secrets.ANNOUNCEMENT_CHANNEL }} \
          --from-literal=MONGO_CLUSTER_STRING=${{ secrets.MONGO_CLUSTER_STRING }} \
          --from-literal=OWNER_ID=${{ secrets.OWNER_ID }} \
          --from-literal=DEFAULT_CHANNELMODE=${{ secrets.DEFAULT_CHANNELMODE }} \
          --from-literal=WHITELIST_GUILDS=${{ secrets.WHITELIST_GUILDS }} \
          --from-literal=DEFAULT_GUILDMODE=${{ secrets.DEFAULT_GUILDMODE }} \
          --from-literal=IMG_UPLOAD_CHANNEL=${{ secrets.IMG_UPLOAD_CHANNEL }} \
          --from-literal=ADMIN_CMD_LOG_CHANNEL=${{ secrets.ADMIN_CMD_LOG_CHANNEL }} \
          --from-literal=OFFICIAL_SERVER=${{ secrets.OFFICIAL_SERVER }}
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/pokegambler/pokegambler:${{ env.TAG }}
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/pokegambler
        kubectl get services -o wide
